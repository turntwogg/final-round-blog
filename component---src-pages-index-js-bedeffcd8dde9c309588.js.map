{"version":3,"sources":["webpack:///./src/components/PostTeaser.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Logo.js","webpack:///./src/components/Header.js","webpack:///./src/components/Container.js","webpack:///./src/components/Text.js","webpack:///./src/components/Footer.js","webpack:///./src/utils/theme.js","webpack:///./src/components/App.js","webpack:///./src/components/Layout.js","webpack:///./src/components/SEO.js"],"names":["BlogPostTitle","styled","h2","withConfig","displayName","componentId","BlogPostTeaser","article","_ref","theme","css","baseSpacingUnit","PostTeaser","_ref2","_ref2$post","post","_ref2$post$frontmatte","frontmatter","path","title","excerpt","react_default","a","createElement","gatsby_browser_entry","to","className","dangerouslySetInnerHTML","__html","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","posts","data","allMarkdownRemark","edges","map","node","components_PostTeaser","key","id","Layout","SEO","keywords","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","LogoLink","Link","Logo","StyledHeader","header","Header","siteTitle","components_Logo","Container","div","maxWidth","StyledText","_classnames","_ref$is","is","Element","variant","rest","objectWithoutPropertiesLoose_default","classnames","StyledFooter","footer","date","Date","getFullYear","Footer","components_Container","components_Text","style","marginBottom","colors","primary","StyledApp","App","styled_components_browser_esm","components_App","components_Header","site","siteMetadata","flexGrow","components_Footer","_755544856","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-bedeffcd8dde9c309588.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled, { css } from 'styled-components';\n\nconst BlogPostTitle = styled.h2`\n  margin-bottom: 0;\n`;\n\nconst BlogPostTeaser = styled.article`\n  ${({ theme }) => css`\n    margin-bottom: ${theme.baseSpacingUnit}px;\n  `}\n`;\n\nconst PostTeaser = ({\n  post: {\n    frontmatter: { path, title },\n    excerpt,\n  },\n}) => {\n  return (\n    <BlogPostTeaser>\n      <BlogPostTitle>\n        <Link to={path}>{title}</Link>\n      </BlogPostTitle>\n\n      <div\n        className=\"blog-post-excerpt\"\n        dangerouslySetInnerHTML={{ __html: excerpt }}\n      />\n    </BlogPostTeaser>\n  );\n};\n\nexport default PostTeaser;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostTeaser from '../components/PostTeaser';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const posts = edges.map(({ node }) => (\n    <PostTeaser key={node.id} post={node} />\n  ));\n  return (\n    <Layout>\n      <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n      <div className=\"blog-posts\">{posts}</div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 350)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst LogoLink = styled(Link)`\n  text-transform: uppercase;\n  font-size: 20px;\n`;\nconst Logo = () => {\n  return (\n    <LogoLink to=\"/\">\n      <strong>Final</strong>Round\n    </LogoLink>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Logo from './Logo';\n\nconst StyledHeader = styled.header`\n  height: 56px;\n  margin-bottom: 24px;\n  padding: 0 24px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #f1f1f1;\n`;\n\nconst Header = ({ siteTitle = '' }) => (\n  <StyledHeader>\n    <Logo />\n  </StyledHeader>\n);\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  ${({ theme }) => css`\n    max-width: ${theme.maxWidth}px;\n    padding: 0 ${theme.baseSpacingUnit}px;\n  `};\n`;\n\nexport default Container;\n","import React from 'react';\nimport classnames from 'classnames';\nimport styled, { css } from 'styled-components';\n\nconst Text = ({ is: Element = 'p', children, variant, ...rest }) => {\n  return (\n    <Element\n      className={classnames('text', { [`text--${variant}`]: variant })}\n      {...rest}\n    >\n      {children}\n    </Element>\n  );\n};\n\nconst StyledText = styled(Text)`\n  ${props =>\n    props.variant === 'caps' &&\n    css`\n      text-transform: uppercase;\n    `}\n`;\n\nexport default StyledText;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Container from './Container';\nimport Text from './Text';\n\nconst StyledFooter = styled.footer`\n  background-color: #f1f1f1;\n  padding: 24px 0;\n  font-size: 14px;\n`;\n\nconst date = new Date().getFullYear();\n\nconst Footer = () => {\n  return (\n    <StyledFooter>\n      <Container>\n        <Text style={{ marginBottom: 0 }}>\n          &copy; {date} All Rights Reserved.\n        </Text>\n      </Container>\n    </StyledFooter>\n  );\n};\n\nexport default Footer;\n","export const theme = {\n  baseSpacingUnit: 24,\n  maxWidth: 1000,\n  colors: { primary: '#5c1f46' },\n};\n","import React from 'react';\nimport styled, { ThemeProvider, css } from 'styled-components';\n\nimport { theme } from '../utils/theme';\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n  ${props => css`\n    border-top: 4px solid ${props.theme.colors.primary};\n  `}\n`;\n\nconst App = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <StyledApp>{children}</StyledApp>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './Header';\nimport Container from './Container';\nimport Footer from './Footer';\nimport App from './App';\n\nimport 'normalize.css/normalize.css';\nimport './Layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <App>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main className=\"site-main\" style={{ flexGrow: 1 }}>\n          <Container>{children}</Container>\n        </main>\n        <Footer />\n      </App>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ description, lang, meta, keywords, title }) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n};\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}